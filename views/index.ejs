<!DOCTYPE html>
<html>
  <body>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <div id="player"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.min.js" integrity="sha512-aVKKRRi/Q/YV+4mjoKBsE4x3H+BkegoM/em46NNlCqNTmUYADjBbeNefNxYV7giUp0VxICtqdrbqU7iVaeZNXA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.5.2/socket.io.js" integrity="sha512-VJ6+sp2E5rFQk05caiXXzQd1wBABpjEj1r5kMiLmGAAgwPItw1YpqsCCBtq8Yr1x6C49/mTpRdXtq8O2RcZhlQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
     <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var socket = io();
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
            height: '390',
            width: '640',
            start: '550',
            autoplay: 0,
            videoId: 'dx4Teh-nv3A',
            playerVars: {
                'playsinline': 1
            },
            events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange
            }
        });
       // player.loadVideoById({videoId: 'M7lc1UVf-VE', startSeconds: 250});
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        player.mute();
        event.target.playVideo();
        // player.unMute();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
        function onPlayerStateChange(event) {
             console.log(event.data)
            if (event.data == 2 ) {
                console.log('emit done')
                socket.emit('chat message', player.getCurrentTime());
            }
       }
      function stopVideo() {
        player.playVideo();
      }

      socket.on('send_pointer', function(msg) {
          console.log('message_received')  
          done = true;
          player.seekTo(msg)
          player.playVideo();
     });

    </script>
       
</body>
</html>